thinking more about the quantum one and the bucketing and going back to our discussion around bucketing. Each dice splits the world 3 ways, and so you have the 3^3 dice combos, but because many combinations result in the same value, you end up with a normal distribution where N worlds result in a move of M.

Dice:1,1,1 total score:3
Dice:1,1,2 total score:4
Dice:1,1,3 total score:5
Dice:1,2,1 total score:4
Dice:1,2,2 total score:5
Dice:1,2,3 total score:6
Dice:1,3,1 total score:5
Dice:1,3,2 total score:6
Dice:1,3,3 total score:7
Dice:2,1,1 total score:4
Dice:2,1,2 total score:5
Dice:2,1,3 total score:6
Dice:2,2,1 total score:5
Dice:2,2,2 total score:6
Dice:2,2,3 total score:7
Dice:2,3,1 total score:6
Dice:2,3,2 total score:7
Dice:2,3,3 total score:8
Dice:3,1,1 total score:5
Dice:3,1,2 total score:6
Dice:3,1,3 total score:7
Dice:3,2,1 total score:6
Dice:3,2,2 total score:7
Dice:3,2,3 total score:8
Dice:3,3,1 total score:7
Dice:3,3,2 total score:8
Dice:3,3,3 total score:9
No of times (N)0 appeared (M)0 
No of times (N)1 appeared (M)0 
No of times (N)2 appeared (M)0 
No of times (N)3 appeared (M)1 #
No of times (N)4 appeared (M)3 ###
No of times (N)5 appeared (M)6 ######
No of times (N)6 appeared (M)7 #######
No of times (N)7 appeared (M)6 ######
No of times (N)8 appeared (M)3 ###
No of times (N)9 appeared (M)1 #

so if you maintain 10 buckets for the "spaces" the player can be on, each turn you can take the number of existing "worlds" in a given bucket and multiple it by the above distributions to create a new number of worlds in the respective buckets. then repeat.

2 things I cant get my head around yet - you start from the "start position" bucket and I'm not quite sure about the order of "updates" you need to do after that.

i think I've got it - you end the game at 21, so there is a very small space of "scores" you need to track. I think what you need to do is build a table 10x21, for each score-square 1-10 you have an array 1-21 where each cell records how many are active on that square with a given score.

each turn you take each cell that represents a bucket of worlds in the same "score-square" that has the same score, you fork the worlds as per the distribution above, and calculate the score for the new worlds based on the cell you just came from and the score for their specific distribution, then update the matrix with the new score-slot values. repeat until one or more of those cells is 21 or more.





